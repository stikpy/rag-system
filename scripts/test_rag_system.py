#!/usr/bin/env python3
"""
Script de test pour v√©rifier que le syst√®me RAG fonctionne correctement.
"""

import os
import sys
from pathlib import Path

# Ajouter le r√©pertoire src au path
sys.path.append(str(Path(__file__).parent.parent / "src"))

from dotenv import load_dotenv
load_dotenv('.env.local')

def test_rag_system():
    """Test du syst√®me RAG."""
    try:
        print("üß™ Test du syst√®me RAG...")
        print("=" * 50)
        
        # Test 1: Import des modules
        print("1Ô∏è‚É£ Test des imports...")
        try:
            from rag.core.rag_system import RAGSystem
            from rag.retrieval.vector_retriever import VectorRetriever
            from rag.retrieval.reranker import CohereReranker
            from rag.utils.config import config
            print("‚úÖ Imports r√©ussis")
        except ImportError as e:
            print(f"‚ùå Erreur d'import: {e}")
            return False
        
        # Test 2: Initialisation du syst√®me RAG
        print("\n2Ô∏è‚É£ Test d'initialisation du syst√®me RAG...")
        try:
            rag = RAGSystem()
            print("‚úÖ Syst√®me RAG initialis√©")
        except Exception as e:
            print(f"‚ùå Erreur d'initialisation: {e}")
            return False
        
        # Test 3: Test d'une requ√™te simple
        print("\n3Ô∏è‚É£ Test d'une requ√™te...")
        try:
            question = "Qu'est-ce que l'intelligence artificielle ?"
            print(f"Question: {question}")
            
            response = rag.query(question)
            print(f"R√©ponse: {response}")
            print("‚úÖ Requ√™te trait√©e avec succ√®s")
            
        except Exception as e:
            print(f"‚ùå Erreur lors de la requ√™te: {e}")
            return False
        
        print("\nüéâ Tous les tests sont pass√©s !")
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur g√©n√©rale: {e}")
        return False

if __name__ == "__main__":
    success = test_rag_system()
    if not success:
        sys.exit(1)
